Include: support/test_helper.vader

Do (rename in current directory):
  :file test/fixtures/deeper/stuff.js
  :VjsRenameFile\<CR>
  thing.js\<CR>
  :AssertEqual sort([
    \ {'lnum': 1, 'fname': 'test/fixtures/blops.js', 'text': "const stuff = require('./deeper/thing')"},
    \ {'lnum': 3, 'fname': 'test/fixtures/package/index.js', 'text': 'const stuff = require("../deeper/thing")'},
    \ {'lnum': 4, 'fname': 'test/fixtures/banana.js', 'text': 'import "./deeper/thing"'},
    \ {'lnum': 5, 'fname': 'test/fixtures/deeper/blah.jsx', 'text': '} from "./thing"'},
  \]), sort(GetQFListFiles())

Do (path from project root 1):
  :file test/fixtures/deeper/stuff.js
  :VjsRenameFile\<CR>
  \<C-U>
  test/fixtures/thing.js\<CR>
  :AssertEqual sort([
    \ {'lnum': 1, 'fname': 'test/fixtures/blops.js', 'text': "const stuff = require('./thing')"},
    \ {'lnum': 3, 'fname': 'test/fixtures/package/index.js', 'text': 'const stuff = require("../thing")'},
    \ {'lnum': 4, 'fname': 'test/fixtures/banana.js', 'text': 'import "./thing"'},
    \ {'lnum': 5, 'fname': 'test/fixtures/deeper/blah.jsx', 'text': '} from "../thing"'},
  \]), sort(GetQFListFiles())

Do (moving to a sibling folder):
  :file test/fixtures/deeper/stuff.js
  :VjsRenameFile\<CR>
  \<C-U>
  test/fixtures/package/thing.js\<CR>
  :AssertEqual sort([
    \ {'lnum': 1, 'fname': 'test/fixtures/blops.js', 'text': "const stuff = require('./package/thing')"},
    \ {'lnum': 3, 'fname': 'test/fixtures/package/index.js', 'text': 'const stuff = require("./thing")'},
    \ {'lnum': 4, 'fname': 'test/fixtures/banana.js', 'text': 'import "./package/thing"'},
    \ {'lnum': 5, 'fname': 'test/fixtures/deeper/blah.jsx', 'text': '} from "../package/thing"'},
  \]), sort(GetQFListFiles())


Given javascript (going up one directory):
  require(".")
  import fuga from '../fuga'

Execute:
  call vjs#imports#UpdateCurrentFileImports('test/fixtures/lib/foo/bar.js', 'test/fixtures/lib/bar.js')

Expect javascript:
  require("./foo")
  import fuga from './fuga'


Given javascript (going down one directory):
  require(".")
  import fuga from '../fuga'

Execute:
  call vjs#imports#UpdateCurrentFileImports('test/fixtures/lib/bar.js', 'test/fixtures/lib/foo/bar.js')

Expect javascript:
  require("..")
  import fuga from '../../fuga'


Given javascript (different parent directories):
  require(".")
  import fuga from '../fuga'

Execute:
  call vjs#imports#UpdateCurrentFileImports('test/fixtures/lib/foo/bar.js', 'test/fixtures/lib2/foo/bar.js')

Expect javascript:
  require("../../lib/foo")
  import fuga from '../../lib/fuga'
